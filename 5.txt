Assignment No:- A6
Problem Statement :- 
		 Cursors: (All types: Implicit, Explicit, Cursor FOR Loop, Parameterized Cursor)
		 Write a PL/SQL block of code using parameterized Cursor, that will merge the data available
		 in the newly created table N_RollCall with the data available in the table O_RollCall. If the
		 data in the first table already exist in the second table then that data should be skipped.
		 Frame the separate problem statement for writing PL/SQL block to implement all types of Cursors inline  with above 			 statement. The problem statement should clearly state the requirements.


drop procedure if exists mycursor;

delimiter //

CREATE PROCEDURE mycursor()
BEGIN
	DECLARE done INT DEFAULT FALSE;
	DECLARE  c_Roll_no int;
	DECLARE  c_Name varchar(20);
	DECLARE  mycursor CURSOR  for SELECT Roll_no,Name FROM A where Roll_no not in(select Roll_no from B);

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

	BEGIN
		OPEN mycursor;
   		read_loop:LOOP
   			FETCH mycursor into c_Roll_no ,c_Name;   
    
   			IF done THEN
    	  		LEAVE read_loop;
   			END IF;           
    
    	  	insert into B(Roll_no,Name) values(c_Roll_no, c_Name);
   		END LOOP;
   		CLOSE mycursor;
	END;
END;
//

delimiter ;

gescoe@gescoe-Vostro-230:~$ mysql -h 192.168.2.232 -u TEA26 -p
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 13
Server version: 5.6.41 MySQL Community Server (GPL)

Copyright (c) 2000, 2014, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> create database aditi;
Query OK, 1 row affected (0.00 sec)

mysql> use aditi;
Database changed
mysql> create table A (Roll_no int,Name varchar(20));
Query OK, 0 rows affected (0.28 sec)

mysql> create table B (Roll_no int,Name varchar(20));
Query OK, 0 rows affected (0.38 sec)

mysql> select*from A;
Empty set (0.01 sec)

mysql> insert into A values(1,'neha');
Query OK, 1 row affected (0.03 sec)

mysql> insert into A values(2,'shubham');
Query OK, 1 row affected (0.06 sec)

mysql> insert into A values(3,'aditi');
Query OK, 1 row affected (0.05 sec)

mysql> insert into B values(1,'kkk');
Query OK, 1 row affected (0.04 sec)

mysql> insert into B values(4,'nnn');
Query OK, 1 row affected (0.03 sec)

mysql> select*from B;
+---------+------+
| Roll_no | Name |
+---------+------+
|       1 | kkk  |
|       4 | nnn  |
+---------+------+
2 rows in set (0.00 sec)

mysql> select*from A;
+---------+----------+
| Roll_no | Name     |
+---------+----------+
|       1 | neha    |
|       2 | shubham |
|       3 | aditi    |
+---------+----------+
3 rows in set (0.00 sec)


mysql> source cursor.sql;
Query OK, 0 rows affected (0.00 sec)

mysql> call mycursor();
Query OK, 0 rows affected (0.09 sec)

mysql> select*from A;
+---------+----------+
| Roll_no | Name     |
+---------+----------+
|       1 | neha    |
|       2 | shubham |
|       3 | aditi    |
+---------+----------+
3 rows in set (0.00 sec)

mysql> select*from B;
+---------+----------+
| Roll_no | Name     |
+---------+----------+
|       1 | kkk      |
|       4 | nnn      |
|       2 | shubham |
|       3 | aditi    |
+---------+----------+
4 rows in set (0.00 sec)

mysql> 

